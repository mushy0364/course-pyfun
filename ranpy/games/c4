#!/usr/bin/env python3

import colors as c
from time import sleep

'''This version of Connect Four features 6 colums and 5 rows. Do you have what it takes to win?'''

def draw_board(board):
    print('1|2|3|4|5|6')
    print('-----------')
    print(board[0] + '|' + board[1] + '|' + board[2] + '|' + board[3] + '|' + board[4] + '|' + board[5])
    print(board[6] + '|' + board[7] + '|' + board[8] + '|' + board[9] + '|' + board[10] + '|' + board[11])
    print(board[12] + '|' + board[13] + '|' + board[14] + '|' + board[15] + '|' + board[16] + '|' + board[17])
    print(board[18] + '|' + board[19] + '|' + board[20] + '|' + board[21] + '|' + board[22] + '|' + board[23])
    print(board[24] + '|' + board[25] + '|' + board[26] + '|' + board[27] + '|' + board[28] + '|' + board[29])

def drop(col,p):
    for n,i in reversed(list(enumerate(col))):
        if i == ' ':
            col[n] = p
            break
        if ' ' not in col:
            print('Invalid Move!')
            sleep(.5)
            break
        print(col)

def turn(board,choice):
    if choice == 1:
        col1 = []
        col1.extend((board[0],board[6],board[12],board[18],board[24]))
        drop(col1,piece)
        board[24] = col[4]
        board[18] = col[3]
        board[12] = col1[2]
        board[6] = col1[1]
        board[0] = col1[0]
    
    if choice == 2:
        col2 = []
        col2.extend([board[1],board[7],board[13],board[19],board[25]])
        drop(col2,piece)
        board[25] = col[4]
        board[19] = col2[3]
        board[13] = col2[2]
        board[7] = col2[1]
        board[1] = col2[0]

    if choice == 3:
        col3 = []
        col3.extend([board[2],board[8],board[14],board[20],board[26]])
        drop(col3,piece)
        board[26] = col3[4]
        board[20] = col3[3]
        board[14] = col3[2]
        board[8] = col3[1]
        board[2] = col3[0]
    
    if choice == 4:
        col4 = []
        col4.extend([board[3],board[9],board[15],board[21],board[27]])
        drop(col4,piece)
        board[27] = col4[4]
        board[21] = col4[3]
        board[15] = col4[2]
        board[9] = col4[1]
        board[3] = col4[0]
        

def check_win(board,p):
    row1a = p == board[12] == board[13] == board[14] == board[15]
    row1b = p == board[]
    '''scrap idea later''' 
    row2 = p == board[8] == board[9] == board[10] == board[11]
    row3 = p == board[4] == board[5] == board[6] == board[7]
    row4 = p == board[0] == board[1] == board[2] == board[3]
    col1 = p == board[12] == board[8] == board[4] == board[0] 
    col2 = p == board[13] == board[9] == board[5] == board[1] 
    col3 = p == board[14] == board[10] == board[6] == board[2]
    col4 = p == board[15] == board[11] == board[7] == board[3]
    diag1a = p == board[12] == board[9] == board[6] == board[3]
    diag1b = p == board[15] == board[10] == board[5] == board[0]
    diag1c = p == board[] == board[] == board[] == board[]
    diag1d = p == board[] == board[] == board[] == board[]
    diag1e = p == board[] == board[] == board[] == board[]
    diag1f = p == board[] == board[] == board[] == board[]
    if row1 or row2 or row3 or row4 or col1 or col2 or col3 or col4 or diag1 or diag2:
       return True
    else:
        return False

try:
    player = 1
    piece = 'X'
    board = [' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ']
    while True:
        print(c.clear + 'You are playing \'Connect 4!\' It is player ' + str(player) + ' turn!\n')
        draw_board(board)
        choice = int(input('\nWhich column? > '))
        turn(board,choice)
        if check_win(board,piece) == True:
            print(c.clear)
            draw_board(board)
            print('\nPlayer ' + str(player) + ' wins!')
            exit()
        if player == 1:
            player = 2
            piece = 'O'
            continue
        if player == 2:
            player = 1
            piece = 'X'
            continue
except KeyboardInterrupt:
    print('\nThanks for playing!')
